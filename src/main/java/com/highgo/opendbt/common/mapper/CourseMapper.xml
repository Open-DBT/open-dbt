<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.highgo.opendbt.course.mapper.CourseMapper">

	<resultMap id="BaseResultMap" type="com.highgo.opendbt.course.domain.entity.Course">
		<id column="id" property="courseId" jdbcType="INTEGER" />
		<result column="course_name" property="courseName" jdbcType="VARCHAR" />
		<result column="course_desc" property="courseDesc" jdbcType="VARCHAR" />
		<result column="course_outline" property="courseOutline" jdbcType="VARCHAR" />
		<result column="knowledge_tree" property="knowledgeTree" jdbcType="VARCHAR" />
		<result column="creator" property="creator" jdbcType="INTEGER" />
		<result column="creator_name" property="creatorName" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="is_open" property="isOpen" jdbcType="INTEGER" />
		<result column="cover_image" property="coverImage" jdbcType="VARCHAR" />
		<result column="is_finish" property="isFinish" jdbcType="INTEGER" />
	</resultMap>

	<select id="getCourseList" resultMap="BaseResultMap">
		select
			t_course.id,
			t_course.course_name,
			t_course.course_desc,
			t_course.course_outline,
			t_course.knowledge_tree,
			t_course.creator,
			t_sys_user.user_name as creator_name,
			t_course.create_time,
			t_course.is_open,
			t_course.cover_image,
			t_course.is_finish
		from t_course
		left join t_sys_user on t_sys_user.id = t_course.creator
		where t_course.delete_flag = 0
		<if test="type == 0">
			and (t_course.creator = #{userId} or t_course.id in (select distinct t_course_user.course_id from t_course_user where t_course_user.user_id = #{userId}))
	    </if>
	    <if test="type == 1">
			and t_course.is_open = 1
	    </if>
		order by t_course.create_time desc, t_course.id desc
		<if test="number != 0">
			limit #{number}
	    </if>
	</select>

	<select id="getOtherPublishCourse" resultMap="BaseResultMap">
		select
			t_course.id,
			t_course.course_name,
			t_course.course_desc,
			t_course.course_outline,
			t_course.knowledge_tree,
			t_course.creator,
			t_sys_user.user_name as creator_name,
			t_course.create_time,
			t_course.is_open,
			t_course.cover_image,
			t_course.is_finish
		from t_course
		left join t_sys_user on t_sys_user.id = t_course.creator
		where t_course.delete_flag = 0 and t_course.is_open = 1
		 	and t_course.creator != #{userId}
		order by t_course.create_time desc, t_course.id desc
	</select>

	<select id="getCourseByParentId" resultMap="BaseResultMap">
		select
			t_course.id,
			t_course.course_name,
			t_course.course_desc,
			t_course.course_outline,
			t_course.knowledge_tree,
			t_course.creator,
			t_course.create_time,
			t_course.is_open,
			t_course.cover_image,
			t_course.is_finish
		from t_course
		where t_course.delete_flag = 0
			and t_course.parent_id = #{courseId}
		order by t_course.id
	</select>

	<select id="getOwnCourse" resultMap="BaseResultMap">
		select
			t_course.id,
			t_course.course_name,
			t_course.course_desc,
			t_course.course_outline,
			t_course.knowledge_tree,
			t_course.creator,
			t_course.create_time,
			t_course.is_open,
			t_course.cover_image,
			t_course.is_finish
		from t_course
		where t_course.creator = #{userId} and t_course.delete_flag = 0
		order by t_course.id desc
	</select>

	<select id="getCoursePublish" resultMap="BaseResultMap">
		select
			t_course.id,
			t_course.course_name,
			t_course.course_desc,
			t_course.course_outline,
			t_course.knowledge_tree,
			t_course.creator,
			t_sys_user.user_name as creator_name,
			t_course.create_time,
			t_course.is_open,
			t_course.cover_image,
			t_course.is_finish
		from t_course
		left join t_sys_user on t_sys_user.id = t_course.creator
		where t_course.is_open = 1 and t_course.delete_flag = 0
		order by t_course.id desc
	</select>

	<select id="getCourseByCourseId" resultMap="BaseResultMap">
		select
			t_course.id,
			t_course.course_name,
			t_course.course_desc,
			t_course.course_outline,
			t_course.knowledge_tree,
			t_course.creator,
			t_course.create_time,
			t_course.is_open,
			t_course.cover_image,
			t_course.is_finish
		from t_course
		where t_course.id = #{courseId}
	</select>

	<select id="getCourseByCourseName" resultMap="BaseResultMap">
		select
			t_course.id,
			t_course.course_name
		from t_course
		where t_course.course_name = #{courseName} and t_course.delete_flag = 0
	</select>

	<insert id="addCourse" useGeneratedKeys="true" keyProperty="courseId">
		insert into t_course
			(course_name, course_desc, course_outline, knowledge_tree, creator, create_time, is_open, cover_image)
		values
			(#{courseName}, #{courseDesc}, #{courseOutline}, #{knowledgeTree}, #{creator}, to_timestamp(#{createTime}, 'yyyy-MM-DD hh24:mi:ss'), #{isOpen}, #{coverImage})
	</insert>

	<insert id="addCopyCourse" useGeneratedKeys="true" keyProperty="courseId">
		insert into t_course
			(course_name, course_desc, course_outline, knowledge_tree, creator, create_time, is_open, cover_image, parent_id)
		values
			(#{courseName}, #{courseDesc}, #{courseOutline}, #{knowledgeTree}, #{creator}, to_timestamp(#{createTime}, 'yyyy-MM-DD hh24:mi:ss'), #{isOpen}, #{coverImage}, #{parentId})
	</insert>

	<update id="updateCourse">
		update t_course
		<set>
			<if test="courseName != null">
	            course_name = #{courseName},
	        </if>
	        <if test="courseDesc != null">
	            course_desc = #{courseDesc},
	        </if>
	        <if test="courseOutline != null">
	            course_outline = #{courseOutline},
	        </if>
	        <if test="knowledgeTree != null">
	            knowledge_tree = #{knowledgeTree},
	        </if>
	        <if test="coverImage != null">
	            cover_image = #{coverImage},
	        </if>
	        is_open = #{isOpen}
		</set>
		where id = #{courseId}
	</update>

	<!-- <delete id="deleteCourse">
		delete from t_course where id = #{courseId}
	</delete> -->
	<update id="deleteCourse">
		update t_course set delete_flag = 1, delete_time = current_timestamp where id = #{courseId}
	</update>

	<update id="updateIsOpen">
		update t_course set is_open = #{isOpen} where id = #{courseId}
	</update>

	<update id="updateIsFinish">
		update t_course set is_finish = 1 where id = #{courseId}
	</update>

	<select id="getCourseTeachers" resultType="java.lang.Integer">
		select
			t_course_user.user_id
		from t_course_user
		where t_course_user.course_id = #{courseId}
	</select>

	<delete id="deleteUserCourse">
		delete from t_course_user where course_id = #{courseId}
	</delete>

	<insert id="addUserCourseArray">
		insert into t_course_user
			(user_id, course_id)
		values
		<foreach collection="teachers" item="item" index="index" separator=",">
			(#{item}, #{courseId})
		</foreach>
	</insert>

</mapper>
